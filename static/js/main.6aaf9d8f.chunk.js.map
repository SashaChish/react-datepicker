{"version":3,"sources":["utils/helpers/helpers.js","components/DateControl/styled.js","components/DateControl/DateControl.jsx","utils/data/data.js","components/Content/Navigation/styled.js","components/Content/Navigation/Navigation.jsx","components/Content/DaysOfWeek/styled.js","components/Content/DaysOfWeek/DaysOfWeek.jsx","utils/dateApi/date.js","components/Content/MonthDates/styled.js","components/Content/MonthDates/MonthDates.jsx","components/Content/styled.js","components/Content/Content.jsx","components/Footer/styled.js","components/Footer/Footer.jsx","App.style.js","App.jsx","index.js"],"names":["addZeroToStart","n","toString","length","Container","styled","div","Wrap","Input","input","Separator","CloseWrap","Close","span","DateControl","selectedDateShow","type","value","firstSelected","disabled","secondSelected","CURRENT_DATE","Date","days","id","name","months","Arrow","i","selected","ArrowLeft","ArrowRight","Title","h2","Navigation","prev","next","options","currentMonth","find","month","onClick","year","Cell","DaysOfWeek","map","day","slice","createPrevDateObj","date","prevMonthDateStart","prevDate","getDate","getMonth","getFullYear","createCurrentDateObj","currentDate","active","MonthDates","getSelected","calendar","lastDatePrevMonth","template","prevMonthDateCount","getDay","createCalendarMonth","item","e","initialCalendarOptions","Content","getSelectedDate","useState","calendarOptions","setCalendarOptions","console","log","option","Label","BtnContainer","Button","button","Footer","goToLastWeek","goToLastMonth","goToLastQuarter","applySelection","GlobalStyle","createGlobalStyle","initialDate","App","setSelected","selectedDate","setSelectedDate","setSelectedDateShow","calendarType","setCalendarType","dateObj","dateValueForShow","Object","keys","key","createDateFormat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aaf9d8f.chunk.js","sourcesContent":["export function addZeroToStart(n) {\n  return n.toString().length === 1 ? '0' + n : n.toString()\n}\n\nexport const createDateFormat = dateObj => {\n  const dateValueForShow = {}\n  for (let key of Object.keys(dateObj)) {\n    if (typeof dateObj[key] === 'string') dateValueForShow[key] = ''\n    else {\n      const { date, month, year } = dateObj[key]\n      dateValueForShow[key] = `${month}-${date}-${year}`\n    }\n  }\n  return dateValueForShow\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 20px;\n`\n\nexport const Input = styled.input`\n  width: 180px;\n  padding: 10px;\n  background: transparent;\n  color: #000000;\n  border: 2px solid #2a9cad;\n  border-radius: 10px;\n  letter-spacing: 3px;\n  font-weight: 600;\n  font-size: 15px;\n  text-align: center;\n`\n\nexport const Separator = styled.div`\n  width: 15px;\n  height: 2px;\n  color: #009999;\n  border: 1px solid #009999;\n  margin: 0 5px;\n`\n\nexport const CloseWrap = styled.div`\n  position: relative;\n`\n\nexport const Close = styled.span`\n  position: absolute;\n  left: 250px;\n  bottom: 10px;\n  width: 25px;\n  height: 25px;\n  opacity: 0.4;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: '';\n    left: 11px;\n    height: 25px;\n    width: 2px;\n    background-color: #000000;\n  }\n\n  &::before {\n    transform: rotate(45deg);\n  }\n\n  &::after {\n    transform: rotate(-45deg);\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Container, Wrap, Input, Separator, CloseWrap, Close } from './styled'\n\nconst DateControl = ({ selectedDateShow }) => {\n  return (\n    <Container>\n      <Wrap>\n        <label>\n          <Input\n            type=\"text\"\n            value={selectedDateShow.firstSelected || '00-00-00'}\n            disabled\n          />\n        </label>\n        <Separator />\n        <label>\n          <Input\n            type=\"text\"\n            value={selectedDateShow.secondSelected || '00-00-00'}\n            disabled\n          />\n        </label>\n        <CloseWrap>\n          <Close />\n        </CloseWrap>\n      </Wrap>\n    </Container>\n  )\n}\n\nDateControl.propTypes = {\n  selectedDateShow: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n}\n\nexport default DateControl\n","export const CURRENT_DATE = new Date()\n\nexport const days = [\n  {\n    id: 1,\n    name: 'Monday',\n  },\n  {\n    id: 2,\n    name: 'Tuesday',\n  },\n  {\n    id: 3,\n    name: 'Wednesday',\n  },\n  {\n    id: 4,\n    name: 'Thursday',\n  },\n  {\n    id: 5,\n    name: 'Friday',\n  },\n  {\n    id: 6,\n    name: 'Saturday',\n  },\n  {\n    id: 7,\n    name: 'Sunday',\n  },\n]\n\nexport const months = [\n  {\n    id: 0,\n    name: 'January',\n  },\n  {\n    id: 1,\n    name: 'February',\n  },\n  {\n    id: 2,\n    name: 'March',\n  },\n  {\n    id: 3,\n    name: 'April',\n  },\n  {\n    id: 4,\n    name: 'May',\n  },\n  {\n    id: 5,\n    name: 'June',\n  },\n  {\n    id: 6,\n    name: 'July',\n  },\n  {\n    id: 7,\n    name: 'August',\n  },\n  {\n    id: 8,\n    name: 'September',\n  },\n  {\n    id: 9,\n    name: 'October',\n  },\n  {\n    id: 10,\n    name: 'November',\n  },\n  {\n    id: 11,\n    name: 'December',\n  },\n]\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  height: 80px;\n  width: 60%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Arrow = styled.i`\n  cursor: ${({ selected }) => (selected ? 'not-allowed' : 'pointer')};\n  border: solid #009999;\n  border-width: 0 5px 5px 0;\n  display: inline-block;\n  padding: 8px;\n  transition: all 0.1s ease;\n\n  &:hover {\n    border-color: ${({ selected }) => (selected ? '#009999' : '#2d59a1')};\n  }\n`\n\nexport const ArrowLeft = styled(Arrow)`\n  transform: rotate(135deg);\n`\n\nexport const ArrowRight = styled(Arrow)`\n  transform: rotate(-45deg);\n`\n\nexport const Title = styled.h2`\n  width: 300px;\n  margin: 0 20px;\n  text-align: center;\n  letter-spacing: 3px;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { months } from '../../../utils/data/data'\n\nimport { ArrowLeft, ArrowRight, Container, Title } from './styled'\n\nconst Navigation = ({ prev, next, options, selected }) => {\n  const currentMonth = months.find(month => month.id === options.month)\n\n  return (\n    <Container>\n      <ArrowLeft selected={selected} onClick={prev} />\n      <Title>{`${currentMonth.name} ${options.year}`}</Title>\n      <ArrowRight selected={selected} onClick={next} />\n    </Container>\n  )\n}\n\nNavigation.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n  selected: PropTypes.bool.isRequired,\n}\n\nexport default Navigation\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  color: #009999;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  text-align: center;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Container, Cell } from './styled'\n\nconst DaysOfWeek = ({ days }) => {\n  return (\n    <Container>\n      {days.map(day => (\n        <Cell key={day.id}>{day.name.slice(0, 3)}</Cell>\n      ))}\n    </Container>\n  )\n}\n\nDaysOfWeek.propTypes = {\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default DaysOfWeek\n","const createPrevDateObj = (year, month, date, prevMonthDateStart, id) => {\n  const prevDate = new Date(year, month - 1, date)\n\n  return {\n    id,\n    date: new Date(year, month - 1, prevMonthDateStart).getDate().toString(),\n    month: (prevDate.getMonth() + 1).toString(),\n    year: prevDate.getFullYear().toString(),\n  }\n}\n\nconst createCurrentDateObj = (year, month, date, id) => {\n  let currentDate = new Date(year, month, date)\n\n  return {\n    id,\n    date: currentDate.getDate().toString(),\n    month: (currentDate.getMonth() + 1).toString(),\n    year: currentDate.getFullYear().toString(),\n  }\n}\n\nexport default function createCalendarMonth({ year, month }) {\n  const SIZE = 42\n  const SUNDAY_INDEX = 7\n  const lastDatePrevMonth = 32 - new Date(year, month - 1, 32).getDate()\n  const template = []\n\n  let date = 1\n  let prevMonthDateCount = (new Date(year, month).getDay() || SUNDAY_INDEX) - 1\n  let prevMonthDateStart = lastDatePrevMonth - prevMonthDateCount + 1\n\n  for (let i = 0; i < SIZE; i++) {\n    if (prevMonthDateCount > 0) {\n      template[i] = createPrevDateObj(year, month, date, prevMonthDateStart, i)\n      prevMonthDateStart++\n      prevMonthDateCount--\n    } else {\n      template[i] = createCurrentDateObj(year, month, date, i)\n      date++\n    }\n  }\n\n  return template\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: ${({active}) => active ? 'pointer' : 'default'};;\n\topacity: ${({active}) => active ? 1 : .4};\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport createCalendarMonth from '../../../utils/dateApi/date'\n\nimport { Container, Cell } from './styled'\n\nconst MonthDates = ({ options, getSelected }) => {\n  const calendar = createCalendarMonth(options)\n\n  return (\n    <Container>\n      {calendar.map(item =>\n        options.month === +item.month - 1 ? (\n          <Cell\n            active\n            key={item.id}\n            onClick={e => {\n              getSelected(item)\n            }}\n          >\n            {item.date}\n          </Cell>\n        ) : (\n          <Cell active={false} key={item.id}>\n            {item.date}\n          </Cell>\n        )\n      )}\n    </Container>\n  )\n}\n\nMonthDates.propTypes = {\n  options: PropTypes.shape({\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n  }).isRequired,\n  getSelected: PropTypes.func.isRequired,\n}\n\nexport default MonthDates\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 25px 10px;\n  border-top: 1px solid #2a9cad;\n  border-bottom: 1px solid #2a9cad;\n`\n\nexport const Wrap = styled.div`\n\twidth: 100%;\n  display: flex;\n\tflex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useState } from 'react'\n\nimport { CURRENT_DATE, days } from '../../utils/data/data'\n\nimport Navigation from './Navigation/Navigation'\nimport DaysOfWeek from './DaysOfWeek/DaysOfWeek'\nimport MonthDates from './MonthDates/MonthDates'\n\nimport { Container, Wrap } from './styled'\n\nconst initialCalendarOptions = {\n  year: CURRENT_DATE.getFullYear(),\n  month: CURRENT_DATE.getMonth(),\n}\n\nconst Content = ({ getSelectedDate, selected }) => {\n  const [calendarOptions, setCalendarOptions] = useState(initialCalendarOptions)\n  console.log(calendarOptions)\n  const prevMonth = () => {\n    !selected &&\n      setCalendarOptions(option => ({\n        year: option.month ? option.year : option.year - 1,\n        month: option.month ? option.month - 1 : 11,\n      }))\n  }\n\n  const nextMonth = () => {\n    !selected &&\n      setCalendarOptions(option => ({\n        year: option.month < 11 ? option.year : option.year + 1,\n        month: option.month < 11 ? option.month + 1 : 0,\n      }))\n  }\n\n  return (\n    <Container>\n      <Wrap>\n        <Navigation\n          prev={prevMonth}\n          next={nextMonth}\n          options={calendarOptions}\n          selected={selected}\n        />\n        <DaysOfWeek days={days} />\n        <MonthDates getSelected={getSelectedDate} options={calendarOptions} />\n      </Wrap>\n    </Container>\n  )\n}\n\nContent.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  getSelectedDate: PropTypes.func.isRequired,\n}\n\nexport default Content\n","import styled from 'styled-components'\n\nexport const Navigation = styled.div`\n  width: 100%;\n  height: 70px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  border-bottom: 1px solid #2a9cad;\n`\n\nexport const Label = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: #009999;\n  cursor: pointer;\n\n  &:hover {\n    color: #2d59a1;\n  }\n`\n\nexport const BtnContainer = styled.div`\n  width: 95%;\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Button = styled.button`\n  font-size: 17px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  background: transparent;\n  border: 2px solid #009999;\n  border-radius: 10px;\n  padding: 10px 40px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    color: #ffffff;\n    background: #2d59a1;\n    border-color: transparent;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Navigation, Label, Button, BtnContainer } from './styled'\n\nconst Footer = ({ goToLastWeek, goToLastMonth, goToLastQuarter, applySelection }) => {\n  return (\n    <>\n      <Navigation>\n        <Label onClick={goToLastWeek}>last week</Label>\n        <Label onClick={goToLastMonth}>last month</Label>\n        <Label onClick={goToLastQuarter}>last quarter</Label>\n      </Navigation>\n      <BtnContainer>\n        <Button onClick={applySelection}>apply</Button>\n      </BtnContainer>\n    </>\n  )\n}\n\nFooter.propTypes = {\n  goToLastWeek: PropTypes.func.isRequired,\n  goToLastMonth: PropTypes.func.isRequired,\n  goToLastQuarter: PropTypes.func.isRequired,\n  applySelection: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n*::after,\n*::before {\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\ntable {\n\tborder-collapse: collapse;\n}\n\n#root {\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n`\n\nexport const Wrap = styled.div`\n  width: 700px;\n  background: #fcfcfc;\n\tborder-radius: 30px;\n`","import { useState } from 'react'\n\nimport { addZeroToStart, createDateFormat } from './utils/helpers/helpers'\n\nimport DateControl from './components/DateControl/DateControl'\nimport Content from './components/Content/Content'\nimport Footer from './components/Footer/Footer'\n\nimport { GlobalStyle, Wrap } from './App.style'\n\nconst initialDate = {\n  firstSelected: '',\n  secondSelected: '',\n}\n\n// app має тільки рендерити\nfunction App() {\n  const [selected, setSelected] = useState(false)\n  const [selectedDate, setSelectedDate] = useState(initialDate)\n  const [selectedDateShow, setSelectedDateShow] = useState(initialDate)\n  const [calendarType, setCalendarType] = useState('')\n\n  const getSelectedDate = ({ id, date, month, year }) => {\n    setSelected(true)\n    if (!calendarType) {\n      setSelectedDate({\n        ...selectedDate,\n        firstSelected: {\n          id,\n          date: addZeroToStart(date),\n          month: addZeroToStart(month),\n          year,\n        },\n      })\n      setCalendarType('single')\n    }\n\n    if (calendarType === 'single') {\n      setSelectedDate({\n        ...selectedDate,\n        secondSelected: {\n          id,\n          date: addZeroToStart(date),\n          month: addZeroToStart(month),\n          year,\n        },\n      })\n    }\n  }\n\n  const applySelection = () => {\n    if (selected) {\n      setSelectedDateShow(createDateFormat(selectedDate))\n      setSelectedDate(initialDate)\n      setCalendarType('')\n      setSelected(false)\n    }\n  }\n\n  const goToLastWeek = () => {}\n\n  const goToLastMonth = () => {}\n\n  const goToLastQuarter = () => {}\n\n  return (\n    <Wrap>\n      <GlobalStyle />\n      <DateControl selectedDateShow={selectedDateShow} />\n      <Content getSelectedDate={getSelectedDate} selected={selected} />\n      <Footer\n        goToLastWeek={goToLastWeek}\n        goToLastMonth={goToLastMonth}\n        goToLastQuarter={goToLastQuarter}\n        applySelection={applySelection}\n      />\n    </Wrap>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}