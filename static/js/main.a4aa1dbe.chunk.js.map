{"version":3,"sources":["utils/helpers/addZeroToStart.js","utils/helpers/createDateFormat.js","components/DateControl/DateControl.style.js","components/DateControl/DateControl.jsx","components/Footer/Footer.style.js","components/Footer/Footer.jsx","utils/data/data.js","utils/date/date.js","components/Navigation/Navigation.style.js","components/Navigation/Navigation.jsx","components/DaysOfWeek/DaysOfWeek.style.js","components/DaysOfWeek/DaysOfWeek.jsx","components/MonthDates/MonthDates.style.js","components/MonthDates/MonthDates.jsx","utils/helpers/isLessId.js","components/Content/Content.style.js","components/Content/Content.jsx","components/Calendar/Calendar.jsx","App.style.js","App.jsx","index.js"],"names":["addZeroToStart","n","length","createDateFormat","first","second","date","month","year","Container","styled","div","ShowDate","Select","select","Button","button","DateControl","selectDates","selectDate","deleteSelectDate","useState","setSelect","onChange","e","JSON","parse","target","value","map","index","stringify","id","onClick","BtnContainer","disabled","Footer","applySelection","selectDateFull","CURRENT_DATE","Date","days","name","months","createPrevDateObj","prevMonthDateStart","i","prevDate","dateStringFormat","getDate","toString","monthStringFormat","getMonth","getFullYear","createCurrentDateObj","currentDate","createCalendarMonth","lastDatePrevMonth","template","prevMonthDateCount","getDay","Arrow","ArrowLeft","ArrowRight","Title","h2","Navigation","handleClickPrevMonth","handleClickNextMonth","options","currentMonth","find","Cell","DaysOfWeek","day","slice","active","props","left","right","inner","MonthDates","getSelectDate","calendarMonth","isFull","isRight","current","isInner","item","firstSelectId","currentSelectId","currentIdSplit","split","firstIdSplit","isLessId","Wrap","initCalendarOptions","Content","calendarOptions","setCalendarOptions","setCalendarMonth","option","nextOptions","initSelectDate","Calendar","isFirstSelect","setIsFirstSelect","setSelectDate","setSelectDates","prev","filter","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4aa1dbe.chunk.js","sourcesContent":["export const addZeroToStart = n => (n.length === 1 ? '0' + n : n)\n","export const createDateFormat = ({ first, second }) => {\n  if (!first) return '00:00:00 - 00:00:00'\n  if (!second) return `${first.date}:${first.month}:${first.year} - 00:00:00`\n\n  return `${first.date}:${first.month}:${first.year} - ${second.date}:${second.month}:${second.year}`\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 40px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 20px;\n  padding: 20px;\n`\n\nexport const ShowDate = styled.div`\n  padding: 10px;\n  background: transparent;\n  color: #000000;\n  border: 1px solid #2a9cad;\n  border-radius: 10px;\n  letter-spacing: 2px;\n  font-weight: 600;\n  font-size: 17px;\n  text-align: center;\n`\n\nexport const Select = styled.select`\n  border: 1px solid #2a9cad;\n  border-radius: 10px;\n  padding: 10px 5px;\n  outline-color: #2a9cad;\n  font-weight: 600;\n  font-size: 16px;\n  letter-spacing: 2px;\n`\n\nexport const Button = styled.button`\n  height: 100%;\n  font-size: 15px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  background: transparent;\n  border: 2px solid #009999;\n  border-radius: 10px;\n  padding: 10px 25px;\n\tmargin-left: 40px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    color: #ffffff;\n    background: #2d59a1;\n    border-color: transparent;\n  }\n`\n","import React, { useState } from 'react'\nimport PropTypes, { object, string } from 'prop-types'\n\nimport { createDateFormat } from '../../utils/helpers'\n\nimport { Button, Container, Select, ShowDate } from './DateControl.style'\n\nexport const DateControl = ({ selectDates, selectDate, deleteSelectDate }) => {\n  const [select, setSelect] = useState(null)\n\n  const handleOnChangeSelect = () => e => {\n    setSelect(JSON.parse(e.target.value))\n  }\n\n  const handleOnClick = () => () => {\n    deleteSelectDate(select ? select : selectDates[0])\n    setSelect(null)\n  }\n\n  return (\n    <Container>\n      {!selectDates.length ? (\n        <ShowDate>{createDateFormat(selectDate)}</ShowDate>\n      ) : (\n        <>\n          <Select onChange={handleOnChangeSelect()}>\n            {selectDates.map((selectDate, index) => (\n              <option\n                key={`${selectDate.first.id}-${index}`}\n                value={JSON.stringify(selectDate)}\n              >\n                {createDateFormat(selectDate)}\n              </option>\n            ))}\n          </Select>\n          <div>\n            <Button onClick={handleOnClick()}>delete</Button>\n          </div>\n        </>\n      )}\n    </Container>\n  )\n}\n\nDateControl.propTypes = {\n  selectDate: PropTypes.shape({\n    first: PropTypes.oneOfType([object, string]).isRequired,\n    second: PropTypes.oneOfType([object, string]).isRequired,\n    isFull: PropTypes.bool.isRequired,\n  }).isRequired,\n  selectDates: PropTypes.arrayOf(\n    PropTypes.shape({\n      first: PropTypes.object.isRequired,\n      second: PropTypes.object.isRequired,\n      isFull: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  deleteSelectDate: PropTypes.func.isRequired,\n}\n","import styled from 'styled-components'\n\nexport const BtnContainer = styled.div`\n  width: 95%;\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Button = styled.button`\n  font-size: 17px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  background: transparent;\n  border: 2px solid #009999;\n  border-radius: 10px;\n  padding: 10px 40px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n\n  ${({ disabled }) =>\n    !disabled &&\n    `\n\t\t&:hover {\n\t\t\tcolor: #ffffff;\n\t\t\tbackground: #2d59a1;\n\t\t\tborder-color: transparent;\n  \t}\n\t`}\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, BtnContainer } from './Footer.style'\n\nexport const Footer = ({ applySelection, selectDateFull }) => {\n  return (\n    <BtnContainer>\n      <Button onClick={applySelection} disabled={!selectDateFull}>\n        apply\n      </Button>\n    </BtnContainer>\n  )\n}\n\nFooter.propTypes = {\n  applySelection: PropTypes.func.isRequired,\n  selectDateFull: PropTypes.bool.isRequired,\n}\n","export const CURRENT_DATE = new Date()\n\nexport const days = [\n  {\n    id: 1,\n    name: 'Monday',\n  },\n  {\n    id: 2,\n    name: 'Tuesday',\n  },\n  {\n    id: 3,\n    name: 'Wednesday',\n  },\n  {\n    id: 4,\n    name: 'Thursday',\n  },\n  {\n    id: 5,\n    name: 'Friday',\n  },\n  {\n    id: 6,\n    name: 'Saturday',\n  },\n  {\n    id: 7,\n    name: 'Sunday',\n  },\n]\n\nexport const months = [\n  {\n    id: 0,\n    name: 'January',\n  },\n  {\n    id: 1,\n    name: 'February',\n  },\n  {\n    id: 2,\n    name: 'March',\n  },\n  {\n    id: 3,\n    name: 'April',\n  },\n  {\n    id: 4,\n    name: 'May',\n  },\n  {\n    id: 5,\n    name: 'June',\n  },\n  {\n    id: 6,\n    name: 'July',\n  },\n  {\n    id: 7,\n    name: 'August',\n  },\n  {\n    id: 8,\n    name: 'September',\n  },\n  {\n    id: 9,\n    name: 'October',\n  },\n  {\n    id: 10,\n    name: 'November',\n  },\n  {\n    id: 11,\n    name: 'December',\n  },\n]\n","import { addZeroToStart } from '../helpers'\n\nconst createPrevDateObj = (year, month, date, prevMonthDateStart, i) => {\n  const prevDate = new Date(year, month - 1, date)\n  const dateStringFormat = addZeroToStart(\n    new Date(year, month - 1, prevMonthDateStart).getDate().toString()\n  )\n  const monthStringFormat = addZeroToStart(prevDate.getMonth().toString())\n\n  const id = `${prevDate.getFullYear()}_${monthStringFormat}_${dateStringFormat}`\n  return {\n    id,\n    date: dateStringFormat,\n    month: monthStringFormat,\n    year: prevDate.getFullYear(),\n  }\n}\n\nconst createCurrentDateObj = (year, month, date, i) => {\n  const currentDate = new Date(year, month, date)\n  const dateStringFormat = addZeroToStart(currentDate.getDate().toString())\n  const monthStringFormat = addZeroToStart(currentDate.getMonth().toString())\n  const id = `${currentDate.getFullYear()}_${monthStringFormat}_${dateStringFormat}`\n  return {\n    id,\n    date: dateStringFormat,\n    month: monthStringFormat,\n    year: currentDate.getFullYear(),\n  }\n}\n\nexport const createCalendarMonth = ({ year, month }) => {\n  const SIZE = 42\n  const SUNDAY_INDEX = 7\n  const lastDatePrevMonth = 32 - new Date(year, month - 1, 32).getDate()\n  const template = []\n\n  let date = 1\n  let prevMonthDateCount = (new Date(year, month).getDay() || SUNDAY_INDEX) - 1\n  let prevMonthDateStart = lastDatePrevMonth - prevMonthDateCount + 1\n  for (let i = 0; i < SIZE; i++) {\n    if (prevMonthDateCount > 0) {\n      template[i] = createPrevDateObj(year, month, date, prevMonthDateStart, i)\n      prevMonthDateStart++\n      prevMonthDateCount--\n    } else {\n      template[i] = createCurrentDateObj(year, month, date, i)\n      date++\n    }\n  }\n\n  return template\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  height: 80px;\n  width: 60%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Arrow = styled.i`\n  cursor: pointer;\n  border: solid #009999;\n  border-width: 0 5px 5px 0;\n  display: inline-block;\n  padding: 8px;\n  transition: all 0.1s ease;\n\n  &:hover {\n    border-color: #2d59a1;\n  }\n`\n\nexport const ArrowLeft = styled(Arrow)`\n  transform: rotate(135deg);\n`\n\nexport const ArrowRight = styled(Arrow)`\n  transform: rotate(-45deg);\n`\n\nexport const Title = styled.h2`\n  width: 300px;\n  margin: 0 20px;\n  text-align: center;\n  letter-spacing: 3px;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { months } from '../../utils/data'\n\nimport { ArrowLeft, ArrowRight, Container, Title } from './Navigation.style'\n\nexport const Navigation = ({ handleClickPrevMonth, handleClickNextMonth, options }) => {\n  const currentMonth = months.find(month => month.id === options.month)\n\n  return (\n    <Container>\n      <ArrowLeft onClick={handleClickPrevMonth} />\n      <Title>{`${currentMonth.name} ${options.year}`}</Title>\n      <ArrowRight onClick={handleClickNextMonth} />\n    </Container>\n  )\n}\n\nNavigation.propTypes = {\n  handleClickPrevMonth: PropTypes.func.isRequired,\n  handleClickNextMonth: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  color: #009999;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  text-align: center;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n`\n","import React from 'react'\n\nimport { days } from '../../utils/data'\n\nimport { Container, Cell } from './DaysOfWeek.style'\n\nexport const DaysOfWeek = () => {\n  return (\n    <Container>\n      {days.map(day => (\n        <Cell key={day.id}>{day.name.slice(0, 3)}</Cell>\n      ))}\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  padding: 10px;\n\tmargin: 4px 0;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: ${({ active }) => (active ? 'pointer' : 'default')};\n  opacity: ${({ active }) => (active ? 1 : 0.4)};\n\n  ${props => {\n    if (props.left) {\n      return `\n\t\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\t\tbackground: #2d59a1;\n\t\t\t\tcolor: #ffffff;\n\t\t\t`\n    }\n\n    if (props.right) {\n      return `\n\t\t\t\tborder-radius: 0px 10px 10px 0;\n\t\t\t\tbackground: #2d59a1;\n\t\t\t\tcolor: #ffffff;\n\t\t\t`\n    }\n\n\t\tif (props.inner) {\n\t\t\treturn `\n\t\t\t\tcolor: #2d59a1;\n\t\t\t\tbackground: #b8edff;\n\t\t\t`\n\t\t}\n  }}\n`\n","import React from 'react'\nimport PropTypes, { object, string } from 'prop-types'\n\nimport { isLessId } from '../../utils/helpers'\n\nimport { Container, Cell } from './MonthDates.style'\n\nexport const MonthDates = ({\n  options,\n  getSelectDate,\n  selectDate,\n  selectDates,\n  calendarMonth,\n}) => {\n  const { first, second, isFull } = selectDate\n\n  const handleSelectDate = date => () => {\n    if (!isLessId(first.id, date.id)) {\n      getSelectDate(date)\n    }\n  }\n\n  const isLeft = current => first.id === current.id\n\n  const isRight = current => second.id === current.id\n\n  const isInner = current => {\n    if (isFull) return current.id > first.id && current.id < second.id\n  }\n\n  return (\n    <Container>\n      {calendarMonth.map(item => (\n        <Cell\n          left={isLeft(item)}\n          right={isRight(item)}\n          inner={isInner(item)}\n          // active={options.month === +item.month}\n          active={true}\n          key={item.id}\n          onClick={handleSelectDate(item)}\n        >\n          {+item.date}\n        </Cell>\n      ))}\n    </Container>\n  )\n}\n\nMonthDates.propTypes = {\n  calendarMonth: PropTypes.arrayOf(PropTypes.object),\n  selectDate: PropTypes.shape({\n    first: PropTypes.oneOfType([object, string]).isRequired,\n    second: PropTypes.oneOfType([object, string]).isRequired,\n    isFull: PropTypes.bool,\n  }),\n  selectDates: PropTypes.arrayOf(\n    PropTypes.shape({\n      first: PropTypes.oneOfType([object, string]).isRequired,\n      second: PropTypes.oneOfType([object, string]).isRequired,\n      isFull: PropTypes.bool,\n    })\n  ),\n  options: PropTypes.shape({\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n  }),\n  getSelectDate: PropTypes.func.isRequired,\n}\n","export const isLessId = (firstSelectId, currentSelectId) => {\n  if (firstSelectId) {\n    const currentIdSplit = currentSelectId.split('_')\n    const firstIdSplit = firstSelectId.split('_')\n    for (let i = 0; i < currentIdSplit.length; i++) {\n      if (+currentIdSplit[i] < +firstIdSplit[i]) return true\n\n      if (+currentIdSplit[i] > +firstIdSplit[i]) return false\n    }\n\n    return false\n  }\n\n  return false\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 25px 10px;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`\n\nexport const Wrap = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import PropTypes, { object, string } from 'prop-types'\nimport { useState } from 'react'\n\nimport { CURRENT_DATE } from '../../utils/data'\nimport { createCalendarMonth } from '../../utils/date'\n\nimport { Navigation } from '../Navigation'\nimport { DaysOfWeek } from '../DaysOfWeek'\nimport { MonthDates } from '../MonthDates'\n\nimport { Container, Wrap } from './Content.style'\n\nconst initCalendarOptions = {\n  year: CURRENT_DATE.getFullYear(),\n  month: CURRENT_DATE.getMonth(),\n}\n\nexport const Content = ({ getSelectDate, selectDate, selectDates }) => {\n  const [calendarOptions, setCalendarOptions] = useState(initCalendarOptions)\n  const [calendarMonth, setCalendarMonth] = useState(createCalendarMonth(calendarOptions))\n  const handleClickPrevMonth = () => {\n    setCalendarOptions(option => {\n      const nextOptions = {\n        year: option.month ? option.year : option.year - 1,\n        month: option.month ? option.month - 1 : 11,\n      }\n      setCalendarMonth(createCalendarMonth(nextOptions))\n      return nextOptions\n    })\n  }\n\n  const handleClickNextMonth = () => {\n    setCalendarOptions(option => {\n      const nextOptions = {\n        year: option.month < 11 ? option.year : option.year + 1,\n        month: option.month < 11 ? option.month + 1 : 0,\n      }\n      setCalendarMonth(createCalendarMonth(nextOptions))\n      return nextOptions\n    })\n  }\n  return (\n    <Container>\n      <Wrap>\n        <Navigation\n          handleClickPrevMonth={handleClickPrevMonth}\n          handleClickNextMonth={handleClickNextMonth}\n          options={calendarOptions}\n        />\n        <DaysOfWeek />\n        <MonthDates\n          calendarMonth={calendarMonth}\n          getSelectDate={getSelectDate}\n          selectDate={selectDate}\n          options={calendarOptions}\n          selectDates={selectDates}\n        />\n      </Wrap>\n    </Container>\n  )\n}\n\nContent.propTypes = {\n  selectDates: PropTypes.arrayOf(\n    PropTypes.shape({\n      first: PropTypes.oneOfType([object, string]).isRequired,\n      second: PropTypes.oneOfType([object, string]).isRequired,\n      isFull: PropTypes.bool.isRequired,\n    })\n  ),\n  selectDate: PropTypes.shape({\n    first: PropTypes.oneOfType([object, string]).isRequired,\n    second: PropTypes.oneOfType([object, string]).isRequired,\n    isFull: PropTypes.bool.isRequired,\n  }).isRequired,\n  getSelectDate: PropTypes.func.isRequired,\n}\n","import React, { useState } from 'react'\n\nimport { DateControl } from '../DateControl'\nimport { Footer } from '../Footer'\nimport { Content } from '../Content'\n\nconst initSelectDate = {\n  first: '',\n  second: '',\n  isFull: false,\n}\n\nexport const Calendar = () => {\n  const [isFirstSelect, setIsFirstSelect] = useState(true)\n  const [selectDate, setSelectDate] = useState(initSelectDate)\n  const [selectDates, setSelectDates] = useState([])\n\n  const getSelectDate = date => {\n    setSelectDate(select => {\n      if (isFirstSelect) {\n        setIsFirstSelect(false)\n        return {\n          first: date,\n          second: '',\n          isFull: false,\n        }\n      }\n\n      setIsFirstSelect(true)\n      return {\n        ...select,\n        second: date,\n        isFull: true,\n      }\n    })\n  }\n\n  const deleteSelectDate = ({ id }) => {\n    setSelectDates(prev => prev.filter(date => date.id !== id))\n  }\n\n  const applySelection = () => {\n    setSelectDates(selectDates => {\n      const id = `${selectDate.first.id}-${selectDate.second.id}`\n      const isAlreadyCreate = !!selectDates.find(date => date.id === id)\n\n      if (isAlreadyCreate) return selectDates\n\n      return [...selectDates, { id, ...selectDate }]\n    })\n    setSelectDate(initSelectDate)\n  }\n\n  return (\n    <>\n      <DateControl\n        deleteSelectDate={deleteSelectDate}\n        selectDates={selectDates}\n        selectDate={selectDate}\n      />\n\n      <Content\n        getSelectDate={getSelectDate}\n        selectDate={selectDate}\n        selectDates={selectDates}\n      />\n      <Footer selectDateFull={selectDate.isFull} applySelection={applySelection} />\n    </>\n  )\n}\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n*::after,\n*::before {\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\ntable {\n\tborder-collapse: collapse;\n}\n\n#root {\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n`\n\nexport const Wrap = styled.div`\n  width: 700px;\n  background: #fcfcfc;\n\tborder-radius: 30px;\n`","import { Calendar } from './components'\n\nimport { GlobalStyle, Wrap } from './App.style'\n\nfunction App() {\n  return (\n    <Wrap>\n      <GlobalStyle />\n      <Calendar />\n    </Wrap>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}