{"version":3,"sources":["utils/helpers/addZeroToStart.js","utils/helpers/createDateFormat.js","components/DateControl/DateControl.style.js","components/DateControl/DateControl.jsx","components/Footer/Footer.style.js","components/Footer/Footer.jsx","utils/data/data.js","utils/date/date.js","components/Navigation/Navigation.style.js","components/Navigation/Navigation.jsx","components/DaysOfWeek/DaysOfWeek.style.js","components/DaysOfWeek/DaysOfWeek.jsx","components/MonthDates/MonthDates.style.js","components/MonthDates/MonthDates.jsx","utils/helpers/isLessId.js","components/Content/Content.style.js","components/Content/Content.jsx","components/Calendar/Calendar.jsx","App.style.js","App.jsx","index.js"],"names":["addZeroToStart","n","length","createDateFormat","first","second","date","month","year","Container","styled","div","ShowDate","Select","select","Button","button","DateControl","selectDates","selectDate","deleteSelectDate","useState","setSelect","onChange","e","JSON","parse","target","value","map","index","stringify","id","onClick","BtnContainer","disabled","Footer","applySelection","selectDateFull","CURRENT_DATE","Date","days","name","months","createPrevDateObj","prevMonthDateStart","i","prevDate","dateStringFormat","getDate","toString","monthStringFormat","getMonth","getFullYear","createCurrentDateObj","currentDate","createCalendarMonth","lastDatePrevMonth","template","prevMonthDateCount","getDay","Arrow","ArrowLeft","ArrowRight","Title","h2","Navigation","handleClickPrevMonth","handleClickNextMonth","options","currentMonth","find","Cell","DaysOfWeek","day","slice","left","right","inner","prevSelect","MonthDates","getSelectDate","calendarMonth","isFull","isRight","current","isInner","isPrevSelect","some","item","active","firstSelectId","currentSelectId","currentIdSplit","split","firstIdSplit","isLessId","Wrap","initCalendarOptions","Content","calendarOptions","setCalendarOptions","setCalendarMonth","option","nextOptions","initSelectDate","Calendar","isFirstSelect","setIsFirstSelect","setSelectDate","setSelectDates","prev","filter","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e688c57.chunk.js","sourcesContent":["export const addZeroToStart = n => (n.length === 1 ? '0' + n : n)\r\n","export const createDateFormat = ({ first, second }) => {\r\n  if (!first) return '00:00:00 - 00:00:00'\r\n  if (!second) return `${first.date}:${first.month}:${first.year} - 00:00:00`\r\n\r\n  return `${first.date}:${first.month}:${first.year} - ${second.date}:${second.month}:${second.year}`\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  min-height: 40px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding-left: 20px;\r\n  padding: 20px;\r\n`\r\n\r\nexport const ShowDate = styled.div`\r\n  padding: 10px;\r\n  background: transparent;\r\n  color: #000000;\r\n  border: 1px solid #2a9cad;\r\n  border-radius: 10px;\r\n  letter-spacing: 2px;\r\n  font-weight: 600;\r\n  font-size: 17px;\r\n  text-align: center;\r\n`\r\n\r\nexport const Select = styled.select`\r\n  border: 1px solid #2a9cad;\r\n  border-radius: 10px;\r\n  padding: 10px 5px;\r\n  outline-color: #2a9cad;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  letter-spacing: 2px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  height: 100%;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n  background: transparent;\r\n  border: 2px solid #009999;\r\n  border-radius: 10px;\r\n  padding: 10px 25px;\r\n\tmargin-left: 40px;\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    background: #2d59a1;\r\n    border-color: transparent;\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport PropTypes, { object, string } from 'prop-types'\r\n\r\nimport { createDateFormat } from '../../utils/helpers'\r\n\r\nimport { Button, Container, Select, ShowDate } from './DateControl.style'\r\n\r\nexport const DateControl = ({ selectDates, selectDate, deleteSelectDate }) => {\r\n  const [select, setSelect] = useState(null)\r\n\r\n  const handleOnChangeSelect = () => e => {\r\n    setSelect(JSON.parse(e.target.value))\r\n  }\r\n\r\n  const handleOnClick = () => () => {\r\n    deleteSelectDate(select ? select : selectDates[0])\r\n    setSelect(null)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {!selectDates.length ? (\r\n        <ShowDate>{createDateFormat(selectDate)}</ShowDate>\r\n      ) : (\r\n        <>\r\n          <Select onChange={handleOnChangeSelect()}>\r\n            {selectDates.map((selectDate, index) => (\r\n              <option\r\n                key={`${selectDate.first.id}-${index}`}\r\n                value={JSON.stringify(selectDate)}\r\n              >\r\n                {createDateFormat(selectDate)}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n          <div>\r\n            <Button onClick={handleOnClick()}>delete</Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nDateControl.propTypes = {\r\n  selectDate: PropTypes.shape({\r\n    first: PropTypes.oneOfType([object, string]).isRequired,\r\n    second: PropTypes.oneOfType([object, string]).isRequired,\r\n    isFull: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  selectDates: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      first: PropTypes.object.isRequired,\r\n      second: PropTypes.object.isRequired,\r\n      isFull: PropTypes.bool.isRequired,\r\n    })\r\n  ).isRequired,\r\n  deleteSelectDate: PropTypes.func.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const BtnContainer = styled.div`\r\n  width: 95%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n  background: transparent;\r\n  border: 2px solid #009999;\r\n  border-radius: 10px;\r\n  padding: 10px 40px;\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  ${({ disabled }) =>\r\n    !disabled &&\r\n    `\r\n\t\t&:hover {\r\n\t\t\tcolor: #ffffff;\r\n\t\t\tbackground: #2d59a1;\r\n\t\t\tborder-color: transparent;\r\n  \t}\r\n\t`}\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Button, BtnContainer } from './Footer.style'\r\n\r\nexport const Footer = ({ applySelection, selectDateFull }) => {\r\n  return (\r\n    <BtnContainer>\r\n      <Button onClick={applySelection} disabled={!selectDateFull}>\r\n        apply\r\n      </Button>\r\n    </BtnContainer>\r\n  )\r\n}\r\n\r\nFooter.propTypes = {\r\n  applySelection: PropTypes.func.isRequired,\r\n  selectDateFull: PropTypes.bool.isRequired,\r\n}\r\n","export const CURRENT_DATE = new Date()\n\nexport const days = [\n  {\n    id: 1,\n    name: 'Monday',\n  },\n  {\n    id: 2,\n    name: 'Tuesday',\n  },\n  {\n    id: 3,\n    name: 'Wednesday',\n  },\n  {\n    id: 4,\n    name: 'Thursday',\n  },\n  {\n    id: 5,\n    name: 'Friday',\n  },\n  {\n    id: 6,\n    name: 'Saturday',\n  },\n  {\n    id: 7,\n    name: 'Sunday',\n  },\n]\n\nexport const months = [\n  {\n    id: 0,\n    name: 'January',\n  },\n  {\n    id: 1,\n    name: 'February',\n  },\n  {\n    id: 2,\n    name: 'March',\n  },\n  {\n    id: 3,\n    name: 'April',\n  },\n  {\n    id: 4,\n    name: 'May',\n  },\n  {\n    id: 5,\n    name: 'June',\n  },\n  {\n    id: 6,\n    name: 'July',\n  },\n  {\n    id: 7,\n    name: 'August',\n  },\n  {\n    id: 8,\n    name: 'September',\n  },\n  {\n    id: 9,\n    name: 'October',\n  },\n  {\n    id: 10,\n    name: 'November',\n  },\n  {\n    id: 11,\n    name: 'December',\n  },\n]\n","import { addZeroToStart } from '../helpers'\r\n\r\nconst createPrevDateObj = (year, month, date, prevMonthDateStart, i) => {\r\n  const prevDate = new Date(year, month - 1, date)\r\n  const dateStringFormat = addZeroToStart(\r\n    new Date(year, month - 1, prevMonthDateStart).getDate().toString()\r\n  )\r\n  const monthStringFormat = addZeroToStart(prevDate.getMonth().toString())\r\n\r\n  const id = `${prevDate.getFullYear()}_${monthStringFormat}_${dateStringFormat}`\r\n  return {\r\n    id,\r\n    date: dateStringFormat,\r\n    month: monthStringFormat,\r\n    year: prevDate.getFullYear(),\r\n  }\r\n}\r\n\r\nconst createCurrentDateObj = (year, month, date, i) => {\r\n  const currentDate = new Date(year, month, date)\r\n  const dateStringFormat = addZeroToStart(currentDate.getDate().toString())\r\n  const monthStringFormat = addZeroToStart(currentDate.getMonth().toString())\r\n  const id = `${currentDate.getFullYear()}_${monthStringFormat}_${dateStringFormat}`\r\n  return {\r\n    id,\r\n    date: dateStringFormat,\r\n    month: monthStringFormat,\r\n    year: currentDate.getFullYear(),\r\n  }\r\n}\r\n\r\nexport const createCalendarMonth = ({ year, month }) => {\r\n  const SIZE = 42\r\n  const SUNDAY_INDEX = 7\r\n  const lastDatePrevMonth = 32 - new Date(year, month - 1, 32).getDate()\r\n  const template = []\r\n\r\n  let date = 1\r\n  let prevMonthDateCount = (new Date(year, month).getDay() || SUNDAY_INDEX) - 1\r\n  let prevMonthDateStart = lastDatePrevMonth - prevMonthDateCount + 1\r\n  for (let i = 0; i < SIZE; i++) {\r\n    if (prevMonthDateCount > 0) {\r\n      template[i] = createPrevDateObj(year, month, date, prevMonthDateStart, i)\r\n      prevMonthDateStart++\r\n      prevMonthDateCount--\r\n    } else {\r\n      template[i] = createCurrentDateObj(year, month, date, i)\r\n      date++\r\n    }\r\n  }\r\n\r\n  return template\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  height: 80px;\r\n  width: 60%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport const Arrow = styled.i`\r\n  cursor: pointer;\r\n  border: solid #009999;\r\n  border-width: 0 5px 5px 0;\r\n  display: inline-block;\r\n  padding: 8px;\r\n  transition: all 0.1s ease;\r\n\r\n  &:hover {\r\n    border-color: #2d59a1;\r\n  }\r\n`\r\n\r\nexport const ArrowLeft = styled(Arrow)`\r\n  transform: rotate(135deg);\r\n`\r\n\r\nexport const ArrowRight = styled(Arrow)`\r\n  transform: rotate(-45deg);\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  width: 300px;\r\n  margin: 0 20px;\r\n  text-align: center;\r\n  letter-spacing: 3px;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { months } from '../../utils/data'\r\n\r\nimport { ArrowLeft, ArrowRight, Container, Title } from './Navigation.style'\r\n\r\nexport const Navigation = ({ handleClickPrevMonth, handleClickNextMonth, options }) => {\r\n  const currentMonth = months.find(month => month.id === options.month)\r\n\r\n  return (\r\n    <Container>\r\n      <ArrowLeft onClick={handleClickPrevMonth} />\r\n      <Title>{`${currentMonth.name} ${options.year}`}</Title>\r\n      <ArrowRight onClick={handleClickNextMonth} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nNavigation.propTypes = {\r\n  handleClickPrevMonth: PropTypes.func.isRequired,\r\n  handleClickNextMonth: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const Cell = styled.div`\r\n  width: 14%;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  color: #009999;\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n","import React from 'react'\r\n\r\nimport { days } from '../../utils/data'\r\n\r\nimport { Container, Cell } from './DaysOfWeek.style'\r\n\r\nexport const DaysOfWeek = () => {\r\n  return (\r\n    <Container>\r\n      {days.map(day => (\r\n        <Cell key={day.id}>{day.name.slice(0, 3)}</Cell>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  padding: 10px;\n  margin: 4px 0;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: pointer;\n\n  ${({ left, right, inner }) => {\n    if (left) {\n      return `\n\t\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\t\tbackground: #2d59a1;\n\t\t\t\tcolor: #ffffff;\n\t\t\t`\n    }\n\n    if (right) {\n      return `\n\t\t\t\tborder-radius: 0px 10px 10px 0;\n\t\t\t\tbackground: #2d59a1;\n\t\t\t\tcolor: #ffffff;\n\t\t\t`\n    }\n\n    if (inner) {\n      return `\n\t\t\t\tcolor: #2d59a1;\n\t\t\t\tbackground: #b8edff;\n\t\t\t`\n    }\n  }}\n\n  ${({ prevSelect }) => {\n    if (prevSelect) {\n      return `\n\t\t\t\tcolor: #ffffff;\n\t\t\t\tbackground: #bcd9e3;\n\t\t\t`\n    }\n  }}\n`\n","import React from 'react'\nimport PropTypes, { object, string } from 'prop-types'\n\nimport { isLessId } from '../../utils/helpers'\n\nimport { Container, Cell } from './MonthDates.style'\n\nexport const MonthDates = ({\n  options,\n  getSelectDate,\n  selectDate,\n  selectDates,\n  calendarMonth,\n}) => {\n  const { first, second, isFull } = selectDate\n\n  const handleSelectDate = date => () => {\n    if (!isLessId(first.id, date.id)) {\n      getSelectDate(date)\n    }\n  }\n\n  const isLeft = current => first.id === current.id\n\n  const isRight = current => second.id === current.id\n\n  const isInner = current => {\n    if (isFull) return current.id > first.id && current.id < second.id\n  }\n\n  const isPrevSelect = current => {\n    if (selectDates.length)\n      return selectDates.some(\n        ({ first, second }) => current.id >= first.id && current.id <= second.id\n      )\n\n    return false\n  }\n\n  return (\n    <Container>\n      {calendarMonth.map(item => (\n        <Cell\n          left={isLeft(item)}\n          right={isRight(item)}\n          inner={isInner(item)}\n          prevSelect={isPrevSelect(item)}\n          active={true}\n          key={item.id}\n          onClick={handleSelectDate(item)}\n        >\n          {+item.date}\n        </Cell>\n      ))}\n    </Container>\n  )\n}\n\nMonthDates.propTypes = {\n  calendarMonth: PropTypes.arrayOf(PropTypes.object),\n  selectDate: PropTypes.shape({\n    first: PropTypes.oneOfType([object, string]).isRequired,\n    second: PropTypes.oneOfType([object, string]).isRequired,\n    isFull: PropTypes.bool,\n  }),\n  selectDates: PropTypes.arrayOf(\n    PropTypes.shape({\n      first: PropTypes.oneOfType([object, string]).isRequired,\n      second: PropTypes.oneOfType([object, string]).isRequired,\n      isFull: PropTypes.bool,\n    })\n  ),\n  options: PropTypes.shape({\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n  }),\n  getSelectDate: PropTypes.func.isRequired,\n}\n","export const isLessId = (firstSelectId, currentSelectId) => {\r\n  if (firstSelectId) {\r\n    const currentIdSplit = currentSelectId.split('_')\r\n    const firstIdSplit = firstSelectId.split('_')\r\n    for (let i = 0; i < currentIdSplit.length; i++) {\r\n      if (+currentIdSplit[i] < +firstIdSplit[i]) return true\r\n\r\n      if (+currentIdSplit[i] > +firstIdSplit[i]) return false\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  return false\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 25px 10px;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nexport const Wrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n","import PropTypes, { object, string } from 'prop-types'\r\nimport { useState } from 'react'\r\n\r\nimport { CURRENT_DATE } from '../../utils/data'\r\nimport { createCalendarMonth } from '../../utils/date'\r\n\r\nimport { Navigation } from '../Navigation'\r\nimport { DaysOfWeek } from '../DaysOfWeek'\r\nimport { MonthDates } from '../MonthDates'\r\n\r\nimport { Container, Wrap } from './Content.style'\r\n\r\nconst initCalendarOptions = {\r\n  year: CURRENT_DATE.getFullYear(),\r\n  month: CURRENT_DATE.getMonth(),\r\n}\r\n\r\nexport const Content = ({ getSelectDate, selectDate, selectDates }) => {\r\n  const [calendarOptions, setCalendarOptions] = useState(initCalendarOptions)\r\n  const [calendarMonth, setCalendarMonth] = useState(createCalendarMonth(calendarOptions))\r\n  const handleClickPrevMonth = () => {\r\n    setCalendarOptions(option => {\r\n      const nextOptions = {\r\n        year: option.month ? option.year : option.year - 1,\r\n        month: option.month ? option.month - 1 : 11,\r\n      }\r\n      setCalendarMonth(createCalendarMonth(nextOptions))\r\n      return nextOptions\r\n    })\r\n  }\r\n\r\n  const handleClickNextMonth = () => {\r\n    setCalendarOptions(option => {\r\n      const nextOptions = {\r\n        year: option.month < 11 ? option.year : option.year + 1,\r\n        month: option.month < 11 ? option.month + 1 : 0,\r\n      }\r\n      setCalendarMonth(createCalendarMonth(nextOptions))\r\n      return nextOptions\r\n    })\r\n  }\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <Navigation\r\n          handleClickPrevMonth={handleClickPrevMonth}\r\n          handleClickNextMonth={handleClickNextMonth}\r\n          options={calendarOptions}\r\n        />\r\n        <DaysOfWeek />\r\n        <MonthDates\r\n          calendarMonth={calendarMonth}\r\n          getSelectDate={getSelectDate}\r\n          selectDate={selectDate}\r\n          options={calendarOptions}\r\n          selectDates={selectDates}\r\n        />\r\n      </Wrap>\r\n    </Container>\r\n  )\r\n}\r\n\r\nContent.propTypes = {\r\n  selectDates: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      first: PropTypes.oneOfType([object, string]).isRequired,\r\n      second: PropTypes.oneOfType([object, string]).isRequired,\r\n      isFull: PropTypes.bool.isRequired,\r\n    })\r\n  ),\r\n  selectDate: PropTypes.shape({\r\n    first: PropTypes.oneOfType([object, string]).isRequired,\r\n    second: PropTypes.oneOfType([object, string]).isRequired,\r\n    isFull: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  getSelectDate: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { DateControl } from '../DateControl'\r\nimport { Footer } from '../Footer'\r\nimport { Content } from '../Content'\r\n\r\nconst initSelectDate = {\r\n  first: '',\r\n  second: '',\r\n  isFull: false,\r\n}\r\n\r\nexport const Calendar = () => {\r\n  const [isFirstSelect, setIsFirstSelect] = useState(true)\r\n  const [selectDate, setSelectDate] = useState(initSelectDate)\r\n  const [selectDates, setSelectDates] = useState([])\r\n\r\n  const getSelectDate = date => {\r\n    setSelectDate(select => {\r\n      if (isFirstSelect) {\r\n        setIsFirstSelect(false)\r\n        return {\r\n          first: date,\r\n          second: '',\r\n          isFull: false,\r\n        }\r\n      }\r\n\r\n      setIsFirstSelect(true)\r\n      return {\r\n        ...select,\r\n        second: date,\r\n        isFull: true,\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteSelectDate = ({ id }) => {\r\n    setSelectDates(prev => prev.filter(date => date.id !== id))\r\n  }\r\n\r\n  const applySelection = () => {\r\n    setSelectDates(selectDates => {\r\n      const id = `${selectDate.first.id}-${selectDate.second.id}`\r\n      const isAlreadyCreate = !!selectDates.find(date => date.id === id)\r\n\r\n      if (isAlreadyCreate) return selectDates\r\n\r\n      return [...selectDates, { id, ...selectDate }]\r\n    })\r\n    setSelectDate(initSelectDate)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DateControl\r\n        deleteSelectDate={deleteSelectDate}\r\n        selectDates={selectDates}\r\n        selectDate={selectDate}\r\n      />\r\n\r\n      <Content\r\n        getSelectDate={getSelectDate}\r\n        selectDate={selectDate}\r\n        selectDates={selectDates}\r\n      />\r\n      <Footer selectDateFull={selectDate.isFull} applySelection={applySelection} />\r\n    </>\r\n  )\r\n}\r\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n*::after,\n*::before {\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\ntable {\n\tborder-collapse: collapse;\n}\n\n#root {\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n`\n\nexport const Wrap = styled.div`\n  width: 700px;\n  background: #fcfcfc;\n\tborder-radius: 30px;\n`","import { Calendar } from './components'\r\n\r\nimport { GlobalStyle, Wrap } from './App.style'\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrap>\r\n      <GlobalStyle />\r\n      <Calendar />\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}