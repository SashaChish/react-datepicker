{"version":3,"sources":["utils/data/data.js","utils/date.js","components/Calendar/Body/Content/DaysOfWeek/styled.js","components/Calendar/Body/Content/DaysOfWeek/index.jsx","components/Calendar/Body/Content/MonthDates/styled.js","components/Calendar/Body/Content/MonthDates/index.jsx","components/Calendar/Body/Content/styled.js","components/Calendar/Body/Content/index.jsx","components/Calendar/Body/Navigation/styled.js","components/Calendar/Body/Navigation/index.jsx","components/Calendar/Head/DateControl/styled.js","components/Calendar/Head/DateControl/index.jsx","App.style.js","App.jsx","index.js"],"names":["days","id","name","months","createPrevDateObj","year","month","date","prevMonthDateStart","prevDate","Date","getDate","toString","getMonth","getFullYear","createCurrentDateObj","currentDate","Thead","styled","thead","Td","td","DaysOfWeek","map","day","slice","Tbody","tbody","MonthDates","calendar","getValue","week","onClick","Table","table","Content","options","getDateValue","lastDatePrevMonth","template","prevMonthDateCount","getDay","i","j","createCalendarMonth","Head","div","Wrap","Arrow","ArrowLeft","ArrowRight","Title","h2","Navigation","prev","next","currentMonth","find","Container","Input","input","Separator","DateControl","dateValue","type","value","disabled","GlobalStyle","createGlobalStyle","Calendar","App","console","log","addZeroToStart","n","length","useState","calendarOptions","setCalendarOptions","calendarType","setCalendarType","setDateValue","option","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAAaA,EAAO,CAClB,CACEC,GAAI,EACJC,KAAM,UAER,CACED,GAAI,EACJC,KAAM,WAER,CACED,GAAI,EACJC,KAAM,aAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,UAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,WAIGC,EAAS,CACpB,CACEF,GAAI,EACJC,KAAM,WAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,OAER,CACED,GAAI,EACJC,KAAM,QAER,CACED,GAAI,EACJC,KAAM,QAER,CACED,GAAI,EACJC,KAAM,UAER,CACED,GAAI,EACJC,KAAM,aAER,CACED,GAAI,EACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,aC9EJE,EAAoB,SAACC,EAAMC,EAAOC,EAAMC,GAC5C,IAAMC,EAAW,IAAIC,KAAKL,EAAMC,EAAQ,EAAGC,GAE3C,MAAO,CACLN,GAAIO,EACJD,KAAM,IAAIG,KAAKL,EAAMC,EAAQ,EAAGE,GAAoBG,UAAUC,WAC9DN,OAAQG,EAASI,WAAa,GAAGD,WACjCP,KAAMI,EAASK,cAAcF,aAI3BG,EAAuB,SAACV,EAAMC,EAAOC,GACzC,IAAIS,EAAc,IAAIN,KAAKL,EAAMC,EAAOC,GAExC,MAAO,CACLN,GAAIM,EACJA,KAAMS,EAAYL,UAAUC,WAC5BN,OAAQU,EAAYH,WAAa,GAAGD,WACpCP,KAAMW,EAAYF,cAAcF,a,sDChBvBK,EAAQC,IAAOC,MAAV,4HAOLC,EAAKF,IAAOG,GAAV,uF,OCWAC,EAhBI,SAAC,GAAc,IAAZtB,EAAW,EAAXA,KACpB,OACE,cAACiB,EAAD,UACE,6BACGjB,EAAKuB,KAAI,SAAAC,GAAG,OACX,cAACJ,EAAD,UAAkBI,EAAItB,KAAKuB,MAAM,EAAG,IAA3BD,EAAIvB,Y,QCPVyB,EAAQR,IAAOS,MAAV,mDAILP,EAAKF,IAAOG,GAAV,2G,SCkBAO,EApBI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE9B,OACE,cAACJ,EAAD,UACGG,EAASN,KAAI,gBAAGQ,EAAH,EAAGA,KAAM9B,EAAT,EAASA,GAAT,OACZ,6BACG8B,EAAKR,KAAI,gBAAGtB,EAAH,EAAGA,GAAOM,EAAV,wBACR,cAAC,EAAD,CAAIyB,QAAS,kBAAMF,EAASvB,IAA5B,SAA6CA,EAAKA,MAAVN,OAFnCA,SCPJgC,EAAQf,IAAOgB,MAAV,4CCuBHC,EAhBC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACpBR,ENYO,YAWb,IAX4D,IAAhBxB,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAI5CgC,EAAoB,GAAK,IAAI5B,KAAKL,EAAMC,EAAQ,EAAG,IAAIK,UACvD4B,EAAW,GAEbhC,EAAO,EACPiC,GAAsB,IAAI9B,KAAKL,EAAMC,GAAOmC,UAL3B,GAKuD,EACxEjC,EAAqB8B,EAAoBE,EAAqB,EAEzDE,EAAI,EAAGA,EAVJ,EAUaA,IAAK,CAC5BH,EAASG,GAAK,CACZzC,GAAIyC,EAAI,EACRX,KAAM,IAER,IAAK,IAAIY,EAAI,EAAGA,EAdN,EAceA,IACnBH,EAAqB,GACvBD,EAASG,GAAGX,KAAKY,GAAKvC,EAAkBC,EAAMC,EAAOC,EAAMC,GAC3DA,IACAgC,MAEAD,EAASG,GAAGX,KAAKY,GAAK5B,EAAqBV,EAAMC,EAAOC,GACxDA,KAKN,OAAOgC,EMxCUK,CAAoBR,GAErC,OACE,eAACH,EAAD,WACE,cAAC,EAAD,CAAYjC,KAAMA,IAClB,cAAC,EAAD,CAAY8B,SAAUO,EAAcR,SAAUA,QCbvCgB,EAAO3B,IAAO4B,IAAV,2GAOJC,EAAO7B,IAAO4B,IAAV,wHAOJE,EAAQ9B,IAAOwB,EAAV,mJAQLO,EAAY/B,YAAO8B,EAAP9B,CAAH,0DAITgC,EAAahC,YAAO8B,EAAP9B,CAAH,0DAIViC,EAAQjC,IAAOkC,GAAV,+GCPHC,EApBI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMnB,EAAc,EAAdA,QAC1BoB,EAAerD,EAAOsD,MAAK,SAAAnD,GAAK,OAAIA,EAAML,KAAOmC,EAAQ9B,SAE/D,OACE,cAACuC,EAAD,UACE,eAACE,EAAD,WACE,cAACE,EAAD,CAAWjB,QAASsB,IACpB,cAACH,EAAD,oBAAWK,EAAatD,KAAxB,YAAgCkC,EAAQ/B,QACxC,cAAC6C,EAAD,CAAYlB,QAASuB,UCXhBG,EAAYxC,IAAO4B,IAAV,wJASTC,EAAO7B,IAAO4B,IAAV,wHAOJa,EAAQzC,IAAO0C,MAAV,+QAcLC,EAAY3C,IAAO4B,IAAV,+HCFPgB,GA1BK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACbzD,EAAsByD,EAAtBzD,MAAOC,EAAewD,EAAfxD,KAAMF,EAAS0D,EAAT1D,KAErB,OACE,cAACqD,EAAD,UACE,eAAC,EAAD,WACE,gCACE,cAACC,EAAD,CAAOK,KAAK,OAAOC,MAAK,UAAK3D,EAAL,YAAcC,EAAd,YAAsBF,GAAQ6D,UAAQ,MAEhE,cAACL,EAAD,IACA,gCACE,cAACF,EAAD,CAAOK,KAAK,OAAOC,MAAK,UAAK3D,EAAL,YAAcC,EAAd,YAAsBF,GAAQ6D,UAAQ,YCb3DC,GAAcC,YAAH,oQAmBXrB,GAAO7B,IAAO4B,IAAV,6CAIJuB,GAAWnD,IAAO4B,IAAV,2OCoCNwB,OAvDf,WACEC,QAAQC,IAAI,UACZ,IAAMxD,EAAc,IAAIN,KAClB+D,EAAiB,SAAAC,GAAC,OAA6B,IAAxBA,EAAE9D,WAAW+D,OAAe,IAAMD,EAAIA,EAAE9D,YAErE,EAA8CgE,mBAAS,CACrDvE,KAAMW,EAAYF,cAClBR,MAAOU,EAAYH,aAFrB,mBAAOgE,EAAP,KAAwBC,EAAxB,KAKA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAkCJ,mBAAS,CACzCrE,KAAMkE,EAAezD,EAAYL,WACjCL,MAAOmE,EAAezD,EAAYH,WAAa,GAC/CR,KAAMW,EAAYF,cAAcF,aAHlC,mBAAOmD,EAAP,KAAkBkB,EAAlB,KA+BA,OACE,eAAC,GAAD,WACE,cAACd,GAAD,IACA,cAAC,GAAD,CAAaJ,UAAWA,IACxB,eAACM,GAAD,WACE,cAAC,EAAD,CAAYf,KA9BA,kBAChBwB,GAAmB,SAAAI,GAAM,MAAK,CAC5B7E,KAAM6E,EAAO5E,MAAQ4E,EAAO7E,KAAO6E,EAAO7E,KAAO,EACjDC,MAAO4E,EAAO5E,MAAQ4E,EAAO5E,MAAQ,EAAI,QA2BViD,KAxBjB,WAChBuB,GAAmB,SAAAI,GACjB,MAAO,CACL7E,KAAM6E,EAAO5E,MAAQ,GAAK4E,EAAO7E,KAAO6E,EAAO7E,KAAO,EACtDC,MAAO4E,EAAO5E,MAAQ,GAAK4E,EAAO5E,MAAQ,EAAI,OAoBA8B,QAASyC,IACvD,cAAC,EAAD,CAASxC,aAhBM,SAAC,GAA2B,IAAzB9B,EAAwB,EAAxBA,KAAMD,EAAkB,EAAlBA,MAAOD,EAAW,EAAXA,KAC9B0E,GAAcC,EAAgB,UAEnCC,EAAa,CACX1E,KAAMkE,EAAelE,GACrBD,MAAOmE,EAAenE,GACtBD,UAUuC+B,QAASyC,WCnDtDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eb3a04d1.chunk.js","sourcesContent":["export const days = [\n  {\n    id: 1,\n    name: 'Monday',\n  },\n  {\n    id: 2,\n    name: 'Tuesday',\n  },\n  {\n    id: 3,\n    name: 'Wednesday',\n  },\n  {\n    id: 4,\n    name: 'Thursday',\n  },\n  {\n    id: 5,\n    name: 'Friday',\n  },\n  {\n    id: 6,\n    name: 'Saturday',\n  },\n  {\n    id: 7,\n    name: 'Sunday',\n  },\n]\n\nexport const months = [\n  {\n    id: 0,\n    name: 'January',\n  },\n  {\n    id: 1,\n    name: 'February',\n  },\n  {\n    id: 2,\n    name: 'March',\n  },\n  {\n    id: 3,\n    name: 'April',\n  },\n  {\n    id: 4,\n    name: 'May',\n  },\n  {\n    id: 5,\n    name: 'June',\n  },\n  {\n    id: 6,\n    name: 'July',\n  },\n  {\n    id: 7,\n    name: 'August',\n  },\n  {\n    id: 8,\n    name: 'September',\n  },\n  {\n    id: 9,\n    name: 'October',\n  },\n  {\n    id: 10,\n    name: 'November',\n  },\n  {\n    id: 11,\n    name: 'December',\n  },\n]\n","const createPrevDateObj = (year, month, date, prevMonthDateStart) => {\n  const prevDate = new Date(year, month - 1, date)\n\n  return {\n    id: prevMonthDateStart,\n    date: new Date(year, month - 1, prevMonthDateStart).getDate().toString(),\n    month: (prevDate.getMonth() + 1).toString(),\n    year: prevDate.getFullYear().toString(),\n  }\n}\n\nconst createCurrentDateObj = (year, month, date) => {\n  let currentDate = new Date(year, month, date)\n\n  return {\n    id: date,\n    date: currentDate.getDate().toString(),\n    month: (currentDate.getMonth() + 1).toString(),\n    year: currentDate.getFullYear().toString(),\n  }\n}\n\nexport default function createCalendarMonth({ year, month }) {\n  const row = 6\n  const col = 7\n  const SUNDAY_INDEX = 7\n  const lastDatePrevMonth = 32 - new Date(year, month - 1, 32).getDate()\n  const template = []\n\n  let date = 1\n  let prevMonthDateCount = (new Date(year, month).getDay() || SUNDAY_INDEX) - 1\n  let prevMonthDateStart = lastDatePrevMonth - prevMonthDateCount + 1\n\n  for (let i = 0; i < row; i++) {\n    template[i] = {\n      id: i + 1,\n      week: [],\n    }\n    for (let j = 0; j < col; j++) {\n      if (prevMonthDateCount > 0) {\n        template[i].week[j] = createPrevDateObj(year, month, date, prevMonthDateStart)\n        prevMonthDateStart++\n        prevMonthDateCount--\n      } else {\n        template[i].week[j] = createCurrentDateObj(year, month, date)\n        date++\n      }\n    }\n  }\n\n  return template\n}\n","import styled from 'styled-components'\n\nexport const Thead = styled.thead`\n  color: #009999;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  text-align: center;\n`\n\nexport const Td = styled.td`\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Td, Thead } from './styled'\n\nconst DaysOfWeek = ({ days }) => {\n  return (\n    <Thead>\n      <tr>\n        {days.map(day => (\n          <Td key={day.id}>{day.name.slice(0, 3)}</Td>\n        ))}\n      </tr>\n    </Thead>\n  )\n}\n\nDaysOfWeek.propTypes = {\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default DaysOfWeek\n","import styled from 'styled-components'\n\nexport const Tbody = styled.tbody`\n  text-align: center;\n`\n\nexport const Td = styled.td`\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: pointer;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Tbody, Td } from './styled'\n\nconst MonthDates = ({ calendar, getValue }) => {\n\n  return (\n    <Tbody>\n      {calendar.map(({ week, id }) => (\n        <tr key={id}>\n          {week.map(({ id, ...date }) => (\n            <Td onClick={() => getValue(date)} key={id}>{date.date}</Td>\n          ))}\n        </tr>\n      ))}\n    </Tbody>\n  )\n}\n\nMonthDates.propTypes = {\n\tcalendar: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tgetValue: PropTypes.func\n}\n\nexport default MonthDates\n","import styled from 'styled-components'\n\nexport const Table = styled.table`\n  width: 100%;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { days } from '../../../../utils/data/data'\nimport createCalendarMonth from '../../../../utils/date'\nimport DaysOfWeek from './DaysOfWeek'\nimport MonthDates from './MonthDates'\nimport { Table } from './styled'\n\nconst Content = ({ options, getDateValue }) => {\n  const calendar = createCalendarMonth(options)\n\n  return (\n    <Table>\n      <DaysOfWeek days={days} />\n      <MonthDates getValue={getDateValue} calendar={calendar} />\n    </Table>\n  )\n}\n\nContent.propTypes = {\n  options: PropTypes.object.isRequired,\n  getDateValue: PropTypes.func.isRequired,\n}\n\nexport default Content\n","import styled from 'styled-components'\n\nexport const Head = styled.div`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n`\n\nexport const Wrap = styled.div`\n  width: 60%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Arrow = styled.i`\n  cursor: pointer;\n  border: solid #009999;\n  border-width: 0 4px 4px 0;\n  display: inline-block;\n  padding: 6px;\n`\n\nexport const ArrowLeft = styled(Arrow)`\n  transform: rotate(135deg);\n`\n\nexport const ArrowRight = styled(Arrow)`\n  transform: rotate(-45deg);\n`\n\nexport const Title = styled.h2`\n  width: 300px;\n  margin: 0 20px;\n  text-align: center;\n  letter-spacing: 3px;\n`\n","import React from 'react'\nimport { months } from '../../../../utils/data/data'\nimport PropTypes from 'prop-types'\nimport { ArrowLeft, ArrowRight, Head, Title, Wrap } from './styled'\n\nconst Navigation = ({ prev, next, options }) => {\n  const currentMonth = months.find(month => month.id === options.month)\n\n  return (\n    <Head>\n      <Wrap>\n        <ArrowLeft onClick={prev} />\n        <Title>{`${currentMonth.name} ${options.year}`}</Title>\n        <ArrowRight onClick={next} />\n      </Wrap>\n    </Head>\n  )\n}\n\nNavigation.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n}\n\nexport default Navigation\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100px;\n  padding: 0 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Wrap = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Input = styled.input`\n  width: 150px;\n  padding: 10px;\n  margin: 10px 0;\n  background: transparent;\n  color: #000000;\n  border: 1px solid #2a9cad;\n  border-radius: 10px;\n  letter-spacing: 2px;\n  font-weight: 600;\n  font-size: 14px;\n  text-align: center;\n`\n\nexport const Separator = styled.div`\n  width: 15px;\n  height: 2px;\n  color: #009999;\n  border: 1px solid #009999;\n  margin: 0 5px;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Wrap, Input, Separator } from './styled'\n\nconst DateControl = ({ dateValue }) => {\n  const { month, date, year } = dateValue\n\n  return (\n    <Container>\n      <Wrap>\n        <label>\n          <Input type=\"text\" value={`${month}-${date}-${year}`} disabled />\n        </label>\n        <Separator />\n        <label>\n          <Input type=\"text\" value={`${month}-${date}-${year}`} disabled />\n        </label>\n      </Wrap>\n    </Container>\n  )\n}\n\nDateControl.propTypes = {\n  dateValue: PropTypes.shape({\n    month: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n  }),\n}\n\nexport default DateControl\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n*::after,\n*::before {\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\n#root {\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n`\n\nexport const Wrap = styled.div`\n  width: 700px;\n`\n\nexport const Calendar = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 25px 10px;\n  border-top: 1px solid #2a9cad;\n  border-bottom: 1px solid #2a9cad;\n`\n\n","import { useState } from 'react'\nimport Content from './components/Calendar/Body/Content'\nimport Navigation from './components/Calendar/Body/Navigation'\nimport DateControl from './components/Calendar/Head/DateControl'\nimport { GlobalStyle, Wrap, Calendar } from './App.style'\n\nfunction App() {\n  console.log('render')\n  const currentDate = new Date()\n  const addZeroToStart = n => (n.toString().length === 1 ? '0' + n : n.toString())\n\n  const [calendarOptions, setCalendarOptions] = useState({\n    year: currentDate.getFullYear(),\n    month: currentDate.getMonth(),\n  })\n\n  const [calendarType, setCalendarType] = useState('')\n\n  const [dateValue, setDateValue] = useState({\n    date: addZeroToStart(currentDate.getDate()),\n    month: addZeroToStart(currentDate.getMonth() + 1),\n    year: currentDate.getFullYear().toString(),\n  })\n\n  const prevMonth = () =>\n    setCalendarOptions(option => ({\n      year: option.month ? option.year : option.year - 1,\n      month: option.month ? option.month - 1 : 11,\n    }))\n\n  const nextMonth = () => {\n    setCalendarOptions(option => {\n      return {\n        year: option.month < 11 ? option.year : option.year + 1,\n        month: option.month < 11 ? option.month + 1 : 0,\n      }\n    })\n  }\n\n  const getDateValue = ({ date, month, year }) => {\n    if (!calendarType) setCalendarType('single')\n\n    setDateValue({\n      date: addZeroToStart(date),\n      month: addZeroToStart(month),\n      year,\n    })\n  }\n\n  return (\n    <Wrap>\n      <GlobalStyle />\n      <DateControl dateValue={dateValue} />\n      <Calendar>\n        <Navigation prev={prevMonth} next={nextMonth} options={calendarOptions} />\n        <Content getDateValue={getDateValue} options={calendarOptions} />\n      </Calendar>\n    </Wrap>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}