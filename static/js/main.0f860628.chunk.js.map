{"version":3,"sources":["utils/helpers/helpers.js","components/DateControl/styled.js","components/DateControl/DateControl.jsx","components/Footer/styled.js","components/Footer/Footer.jsx","App.style.js","App.jsx","index.js"],"names":["Container","styled","div","Wrap","Input","input","Separator","CloseWrap","Close","span","DateControl","selectedDateShow","type","value","firstSelected","disabled","secondSelected","Navigation","Label","BtnContainer","Button","button","Footer","goToLastWeek","goToLastMonth","goToLastQuarter","applySelection","onClick","GlobalStyle","createGlobalStyle","initialDate","App","useState","selected","setSelected","selectedDate","setSelectedDate","setSelectedDateShow","setCalendarType","dateObj","dateValueForShow","Object","keys","key","date","month","year","createDateFormat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAIO,I,sCCFMA,EAAYC,IAAOC,IAAV,wIAQTC,EAAOF,IAAOC,IAAV,gIAOJE,EAAQH,IAAOI,MAAV,4PAaLC,EAAYL,IAAOC,IAAV,+HAQTK,EAAYN,IAAOC,IAAV,mDAITM,EAAQP,IAAOQ,KAAV,4c,OCNHC,EA/BK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACrB,OACE,cAACX,EAAD,UACE,eAACG,EAAD,WACE,gCACE,cAACC,EAAD,CACEQ,KAAK,OACLC,MAAOF,EAAiBG,eAAiB,WACzCC,UAAQ,MAGZ,cAACT,EAAD,IACA,gCACE,cAACF,EAAD,CACEQ,KAAK,OACLC,MAAOF,EAAiBK,gBAAkB,WAC1CD,UAAQ,MAGZ,cAACR,EAAD,UACE,cAACC,EAAD,YCvBGS,EAAahB,IAAOC,IAAV,8KASVgB,EAAQjB,IAAOC,IAAV,2MAaLiB,EAAelB,IAAOC,IAAV,mIAQZkB,EAASnB,IAAOoB,OAAV,iYCLJC,EAtBA,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAC9D,OACE,qCACE,eAACT,EAAD,WACE,cAACC,EAAD,CAAOS,QAASJ,EAAhB,uBACA,cAACL,EAAD,CAAOS,QAASH,EAAhB,wBACA,cAACN,EAAD,CAAOS,QAASF,EAAhB,6BAEF,cAACN,EAAD,UACE,cAACC,EAAD,CAAQO,QAASD,EAAjB,yBCZKE,EAAcC,YAAH,gTAuBX1B,EAAOF,IAAOC,IAAV,6FCfX4B,EAAc,CAClBhB,cAAe,GACfE,eAAgB,IAoEHe,MAhEf,WACE,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAASF,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgDJ,mBAASF,GAAzD,mBAAOnB,EAAP,KAAyB0B,EAAzB,KACA,EAAwCL,mBAAS,IAAjD,mBAAqBM,GAArB,WA6CA,OACE,eAAC,EAAD,WACE,cAACV,EAAD,IACA,cAAC,EAAD,CAAajB,iBAAkBA,IAE/B,cAAC,EAAD,CACEY,aAZe,aAafC,cAXgB,aAYhBC,gBAVkB,aAWlBC,eAxBiB,WACjBO,IACFI,ENhD0B,SAAAE,GAE9B,IADA,IAAMC,EAAmB,GACzB,MAAgBC,OAAOC,KAAKH,GAA5B,eAAsC,CAAjC,IAAII,EAAG,KACV,GAA4B,kBAAjBJ,EAAQI,GAAmBH,EAAiBG,GAAO,OACzD,CACH,MAA8BJ,EAAQI,GAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KACrBN,EAAiBG,GAAjB,UAA2BE,EAA3B,YAAoCD,EAApC,YAA4CE,IAGhD,OAAON,EMuCiBO,CAAiBZ,IACrCC,EAAgBN,GAChBQ,EAAgB,IAChBJ,GAAY,W,MClDlBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0f860628.chunk.js","sourcesContent":["export function addZeroToStart(n) {\n  return n.toString().length === 1 ? '0' + n : n.toString()\n}\n\nexport const createDateFormat = dateObj => {\n  const dateValueForShow = {}\n  for (let key of Object.keys(dateObj)) {\n    if (typeof dateObj[key] === 'string') dateValueForShow[key] = ''\n    else {\n      const { date, month, year } = dateObj[key]\n      dateValueForShow[key] = `${month}-${date}-${year}`\n    }\n  }\n  return dateValueForShow\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 20px;\n`\n\nexport const Input = styled.input`\n  width: 180px;\n  padding: 10px;\n  background: transparent;\n  color: #000000;\n  border: 2px solid #2a9cad;\n  border-radius: 10px;\n  letter-spacing: 3px;\n  font-weight: 600;\n  font-size: 15px;\n  text-align: center;\n`\n\nexport const Separator = styled.div`\n  width: 15px;\n  height: 2px;\n  color: #009999;\n  border: 1px solid #009999;\n  margin: 0 5px;\n`\n\nexport const CloseWrap = styled.div`\n  position: relative;\n`\n\nexport const Close = styled.span`\n  position: absolute;\n  left: 250px;\n  bottom: 10px;\n  width: 25px;\n  height: 25px;\n  opacity: 0.4;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: '';\n    left: 11px;\n    height: 25px;\n    width: 2px;\n    background-color: #000000;\n  }\n\n  &::before {\n    transform: rotate(45deg);\n  }\n\n  &::after {\n    transform: rotate(-45deg);\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Container, Wrap, Input, Separator, CloseWrap, Close } from './styled'\n\nconst DateControl = ({ selectedDateShow }) => {\n  return (\n    <Container>\n      <Wrap>\n        <label>\n          <Input\n            type=\"text\"\n            value={selectedDateShow.firstSelected || '00-00-00'}\n            disabled\n          />\n        </label>\n        <Separator />\n        <label>\n          <Input\n            type=\"text\"\n            value={selectedDateShow.secondSelected || '00-00-00'}\n            disabled\n          />\n        </label>\n        <CloseWrap>\n          <Close />\n        </CloseWrap>\n      </Wrap>\n    </Container>\n  )\n}\n\nDateControl.propTypes = {\n  selectedDateShow: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n}\n\nexport default DateControl\n","import styled from 'styled-components'\n\nexport const Navigation = styled.div`\n  width: 100%;\n  height: 70px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  border-bottom: 1px solid #2a9cad;\n`\n\nexport const Label = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: #009999;\n  cursor: pointer;\n\n  &:hover {\n    color: #2d59a1;\n  }\n`\n\nexport const BtnContainer = styled.div`\n  width: 95%;\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Button = styled.button`\n  font-size: 17px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  background: transparent;\n  border: 2px solid #009999;\n  border-radius: 10px;\n  padding: 10px 40px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    color: #ffffff;\n    background: #2d59a1;\n    border-color: transparent;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Navigation, Label, Button, BtnContainer } from './styled'\n\nconst Footer = ({ goToLastWeek, goToLastMonth, goToLastQuarter, applySelection }) => {\n  return (\n    <>\n      <Navigation>\n        <Label onClick={goToLastWeek}>last week</Label>\n        <Label onClick={goToLastMonth}>last month</Label>\n        <Label onClick={goToLastQuarter}>last quarter</Label>\n      </Navigation>\n      <BtnContainer>\n        <Button onClick={applySelection}>apply</Button>\n      </BtnContainer>\n    </>\n  )\n}\n\nFooter.propTypes = {\n  goToLastWeek: PropTypes.func.isRequired,\n  goToLastMonth: PropTypes.func.isRequired,\n  goToLastQuarter: PropTypes.func.isRequired,\n  applySelection: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n*::after,\n*::before {\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\ntable {\n\tborder-collapse: collapse;\n}\n\n#root {\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n`\n\nexport const Wrap = styled.div`\n  width: 700px;\n  background: #fcfcfc;\n\tborder-radius: 30px;\n`","import { useState } from 'react'\n\nimport { addZeroToStart, createDateFormat } from './utils/helpers/helpers'\n\nimport DateControl from './components/DateControl/DateControl'\n// import Content from './components/Content/Content'\nimport Footer from './components/Footer/Footer'\n\nimport { GlobalStyle, Wrap } from './App.style'\n\nconst initialDate = {\n  firstSelected: '',\n  secondSelected: '',\n}\n\n// app має тільки рендерити\nfunction App() {\n  const [selected, setSelected] = useState(false)\n  const [selectedDate, setSelectedDate] = useState(initialDate)\n  const [selectedDateShow, setSelectedDateShow] = useState(initialDate)\n  const [calendarType, setCalendarType] = useState('')\n\n  const getSelectedDate = ({ id, date, month, year }) => {\n    setSelected(true)\n    if (!calendarType) {\n      setSelectedDate({\n        ...selectedDate,\n        firstSelected: {\n          id,\n          date: addZeroToStart(date),\n          month: addZeroToStart(month),\n          year,\n        },\n      })\n      setCalendarType('single')\n    }\n\n    if (calendarType === 'single') {\n      setSelectedDate({\n        ...selectedDate,\n        secondSelected: {\n          id,\n          date: addZeroToStart(date),\n          month: addZeroToStart(month),\n          year,\n        },\n      })\n    }\n  }\n\n  const applySelection = () => {\n    if (selected) {\n      setSelectedDateShow(createDateFormat(selectedDate))\n      setSelectedDate(initialDate)\n      setCalendarType('')\n      setSelected(false)\n    }\n  }\n\n  const goToLastWeek = () => {}\n\n  const goToLastMonth = () => {}\n\n  const goToLastQuarter = () => {}\n\n  return (\n    <Wrap>\n      <GlobalStyle />\n      <DateControl selectedDateShow={selectedDateShow} />\n      {/* <Content getSelectedDate={getSelectedDate} selected={selected} /> */}\n      <Footer\n        goToLastWeek={goToLastWeek}\n        goToLastMonth={goToLastMonth}\n        goToLastQuarter={goToLastQuarter}\n        applySelection={applySelection}\n      />\n    </Wrap>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}