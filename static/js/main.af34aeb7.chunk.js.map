{"version":3,"sources":["utils/helpers/helpers.js","components/DateControl/styled.js","components/DateControl/DateControl.jsx","utils/data/data.js","components/Content/Navigation/styled.js","components/Content/DaysOfWeek/styled.js","components/Content/MonthDates/styled.js","components/Content/styled.js","components/Content/Content.jsx","components/Footer/styled.js","components/Footer/Footer.jsx","App.style.js","App.jsx","index.js"],"names":["addZeroToStart","n","toString","length","Container","styled","div","Wrap","Input","input","Separator","CloseWrap","Close","span","DateControl","selectedDateShow","type","value","firstSelected","disabled","secondSelected","CURRENT_DATE","Date","Arrow","i","selected","h2","active","initialCalendarOptions","year","getFullYear","month","getMonth","Content","getSelectedDate","useState","calendarOptions","console","log","Navigation","Label","BtnContainer","Button","button","Footer","goToLastWeek","goToLastMonth","goToLastQuarter","applySelection","onClick","GlobalStyle","createGlobalStyle","initialDate","App","setSelected","selectedDate","setSelectedDate","setSelectedDateShow","calendarType","setCalendarType","id","date","dateObj","dateValueForShow","Object","keys","key","createDateFormat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af34aeb7.chunk.js","sourcesContent":["export function addZeroToStart(n) {\n  return n.toString().length === 1 ? '0' + n : n.toString()\n}\n\nexport const createDateFormat = dateObj => {\n  const dateValueForShow = {}\n  for (let key of Object.keys(dateObj)) {\n    if (typeof dateObj[key] === 'string') dateValueForShow[key] = ''\n    else {\n      const { date, month, year } = dateObj[key]\n      dateValueForShow[key] = `${month}-${date}-${year}`\n    }\n  }\n  return dateValueForShow\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 20px;\n`\n\nexport const Input = styled.input`\n  width: 180px;\n  padding: 10px;\n  background: transparent;\n  color: #000000;\n  border: 2px solid #2a9cad;\n  border-radius: 10px;\n  letter-spacing: 3px;\n  font-weight: 600;\n  font-size: 15px;\n  text-align: center;\n`\n\nexport const Separator = styled.div`\n  width: 15px;\n  height: 2px;\n  color: #009999;\n  border: 1px solid #009999;\n  margin: 0 5px;\n`\n\nexport const CloseWrap = styled.div`\n  position: relative;\n`\n\nexport const Close = styled.span`\n  position: absolute;\n  left: 250px;\n  bottom: 10px;\n  width: 25px;\n  height: 25px;\n  opacity: 0.4;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: '';\n    left: 11px;\n    height: 25px;\n    width: 2px;\n    background-color: #000000;\n  }\n\n  &::before {\n    transform: rotate(45deg);\n  }\n\n  &::after {\n    transform: rotate(-45deg);\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Container, Wrap, Input, Separator, CloseWrap, Close } from './styled'\n\nconst DateControl = ({ selectedDateShow }) => {\n  return (\n    <Container>\n      <Wrap>\n        <label>\n          <Input\n            type=\"text\"\n            value={selectedDateShow.firstSelected || '00-00-00'}\n            disabled\n          />\n        </label>\n        <Separator />\n        <label>\n          <Input\n            type=\"text\"\n            value={selectedDateShow.secondSelected || '00-00-00'}\n            disabled\n          />\n        </label>\n        <CloseWrap>\n          <Close />\n        </CloseWrap>\n      </Wrap>\n    </Container>\n  )\n}\n\nDateControl.propTypes = {\n  selectedDateShow: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n}\n\nexport default DateControl\n","export const CURRENT_DATE = new Date()\n\nexport const days = [\n  {\n    id: 1,\n    name: 'Monday',\n  },\n  {\n    id: 2,\n    name: 'Tuesday',\n  },\n  {\n    id: 3,\n    name: 'Wednesday',\n  },\n  {\n    id: 4,\n    name: 'Thursday',\n  },\n  {\n    id: 5,\n    name: 'Friday',\n  },\n  {\n    id: 6,\n    name: 'Saturday',\n  },\n  {\n    id: 7,\n    name: 'Sunday',\n  },\n]\n\nexport const months = [\n  {\n    id: 0,\n    name: 'January',\n  },\n  {\n    id: 1,\n    name: 'February',\n  },\n  {\n    id: 2,\n    name: 'March',\n  },\n  {\n    id: 3,\n    name: 'April',\n  },\n  {\n    id: 4,\n    name: 'May',\n  },\n  {\n    id: 5,\n    name: 'June',\n  },\n  {\n    id: 6,\n    name: 'July',\n  },\n  {\n    id: 7,\n    name: 'August',\n  },\n  {\n    id: 8,\n    name: 'September',\n  },\n  {\n    id: 9,\n    name: 'October',\n  },\n  {\n    id: 10,\n    name: 'November',\n  },\n  {\n    id: 11,\n    name: 'December',\n  },\n]\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  height: 80px;\n  width: 60%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Arrow = styled.i`\n  cursor: ${({ selected }) => (selected ? 'not-allowed' : 'pointer')};\n  border: solid #009999;\n  border-width: 0 5px 5px 0;\n  display: inline-block;\n  padding: 8px;\n  transition: all 0.1s ease;\n\n  &:hover {\n    border-color: ${({ selected }) => (selected ? '#009999' : '#2d59a1')};\n  }\n`\n\nexport const ArrowLeft = styled(Arrow)`\n  transform: rotate(135deg);\n`\n\nexport const ArrowRight = styled(Arrow)`\n  transform: rotate(-45deg);\n`\n\nexport const Title = styled.h2`\n  width: 300px;\n  margin: 0 20px;\n  text-align: center;\n  letter-spacing: 3px;\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  color: #009999;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  text-align: center;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const Cell = styled.div`\n  width: 14%;\n  display: inline-flex;\n  justify-content: center;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: ${({active}) => active ? 'pointer' : 'default'};;\n\topacity: ${({active}) => active ? 1 : .4};\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 25px 10px;\n  border-top: 1px solid #2a9cad;\n  border-bottom: 1px solid #2a9cad;\n`\n\nexport const Wrap = styled.div`\n\twidth: 100%;\n  display: flex;\n\tflex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import React from 'react'\nimport { useState } from 'react/cjs/react.development'\nimport PropTypes from 'prop-types'\n\nimport { CURRENT_DATE, days } from '../../utils/data/data'\n\nimport Navigation from './Navigation/Navigation'\nimport DaysOfWeek from './DaysOfWeek/DaysOfWeek'\nimport MonthDates from './MonthDates/MonthDates'\n\nimport { Container, Wrap } from './styled'\n\nconst initialCalendarOptions = {\n  year: CURRENT_DATE.getFullYear(),\n  month: CURRENT_DATE.getMonth(),\n}\n\nconst Content = ({ getSelectedDate, selected }) => {\n  const [calendarOptions, setCalendarOptions] = useState(initialCalendarOptions)\n\tconsole.log(calendarOptions)\n  const prevMonth = () => {\n    !selected &&\n      setCalendarOptions(option => ({\n        year: option.month ? option.year : option.year - 1,\n        month: option.month ? option.month - 1 : 11,\n      }))\n  }\n\n  const nextMonth = () => {\n    !selected &&\n      setCalendarOptions(option => {\n        return {\n          year: option.month < 11 ? option.year : option.year + 1,\n          month: option.month < 11 ? option.month + 1 : 0,\n        }\n      })\n  }\n\n  return (\n    <Container>\n      <Wrap>\n        {/* <Navigation\n          prev={prevMonth}\n          next={nextMonth}\n          options={calendarOptions}\n          selected={selected}\n        />\n        <DaysOfWeek days={days} />\n        <MonthDates getSelected={getSelectedDate} options={calendarOptions} /> */}\n      </Wrap>\n    </Container>\n  )\n}\n\nContent.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  getSelectedDate: PropTypes.func.isRequired,\n}\n\nexport default Content\n","import styled from 'styled-components'\n\nexport const Navigation = styled.div`\n  width: 100%;\n  height: 70px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  border-bottom: 1px solid #2a9cad;\n`\n\nexport const Label = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: #009999;\n  cursor: pointer;\n\n  &:hover {\n    color: #2d59a1;\n  }\n`\n\nexport const BtnContainer = styled.div`\n  width: 95%;\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Button = styled.button`\n  font-size: 17px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  background: transparent;\n  border: 2px solid #009999;\n  border-radius: 10px;\n  padding: 10px 40px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    color: #ffffff;\n    background: #2d59a1;\n    border-color: transparent;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Navigation, Label, Button, BtnContainer } from './styled'\n\nconst Footer = ({ goToLastWeek, goToLastMonth, goToLastQuarter, applySelection }) => {\n  return (\n    <>\n      <Navigation>\n        <Label onClick={goToLastWeek}>last week</Label>\n        <Label onClick={goToLastMonth}>last month</Label>\n        <Label onClick={goToLastQuarter}>last quarter</Label>\n      </Navigation>\n      <BtnContainer>\n        <Button onClick={applySelection}>apply</Button>\n      </BtnContainer>\n    </>\n  )\n}\n\nFooter.propTypes = {\n  goToLastWeek: PropTypes.func.isRequired,\n  goToLastMonth: PropTypes.func.isRequired,\n  goToLastQuarter: PropTypes.func.isRequired,\n  applySelection: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n*::after,\n*::before {\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\ntable {\n\tborder-collapse: collapse;\n}\n\n#root {\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n`\n\nexport const Wrap = styled.div`\n  width: 700px;\n  background: #fcfcfc;\n\tborder-radius: 30px;\n`","import { useState } from 'react'\n\nimport { addZeroToStart, createDateFormat } from './utils/helpers/helpers'\n\nimport DateControl from './components/DateControl/DateControl'\nimport Content from './components/Content/Content'\nimport Footer from './components/Footer/Footer'\n\nimport { GlobalStyle, Wrap } from './App.style'\n\nconst initialDate = {\n  firstSelected: '',\n  secondSelected: '',\n}\n\n// app має тільки рендерити\nfunction App() {\n  const [selected, setSelected] = useState(false)\n  const [selectedDate, setSelectedDate] = useState(initialDate)\n  const [selectedDateShow, setSelectedDateShow] = useState(initialDate)\n  const [calendarType, setCalendarType] = useState('')\n\n  const getSelectedDate = ({ id, date, month, year }) => {\n    setSelected(true)\n    if (!calendarType) {\n      setSelectedDate({\n        ...selectedDate,\n        firstSelected: {\n          id,\n          date: addZeroToStart(date),\n          month: addZeroToStart(month),\n          year,\n        },\n      })\n      setCalendarType('single')\n    }\n\n    if (calendarType === 'single') {\n      setSelectedDate({\n        ...selectedDate,\n        secondSelected: {\n          id,\n          date: addZeroToStart(date),\n          month: addZeroToStart(month),\n          year,\n        },\n      })\n    }\n  }\n\n  const applySelection = () => {\n    if (selected) {\n      setSelectedDateShow(createDateFormat(selectedDate))\n      setSelectedDate(initialDate)\n      setCalendarType('')\n      setSelected(false)\n    }\n  }\n\n  const goToLastWeek = () => {}\n\n  const goToLastMonth = () => {}\n\n  const goToLastQuarter = () => {}\n\n  return (\n    <Wrap>\n      <GlobalStyle />\n      <DateControl selectedDateShow={selectedDateShow} />\n      <Content getSelectedDate={getSelectedDate} selected={selected} />\n      <Footer\n        goToLastWeek={goToLastWeek}\n        goToLastMonth={goToLastMonth}\n        goToLastQuarter={goToLastQuarter}\n        applySelection={applySelection}\n      />\n    </Wrap>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}